variables:
  PACKAGE_SCHEME: "MyGuavaPaymentSDK"
  RELEASE_BRANCH: "github-release"
  GH_TARGET_BRANCH: "master"
  TAG_TARGET_SHA: ""
  DEBUG: 1

stages:
  - build
  - test
  - version
  - release

default:
  tags:
    - ios
  before_script:
    - set -euo pipefail
    - xcodebuild -version
    - swift --version
    - "export LC_ALL=en_US.UTF-8"
    - "export LANG=en_US.UTF-8"

cache:
  key: "gems-${CI_COMMIT_REF_SLUG}"
  paths:
    - .gem/

workflow:
  rules:
    # Run MR pipelines when there is a merge request
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    # Run push pipelines only when there is NO open MR for the branch
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_OPEN_MERGE_REQUESTS == null'
      when: always
    # Allow manual Web-triggered pipelines
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: always
    - when: never

build_ios:
  stage: build
  when: manual
#  when: always
  script:
    - fastlane build_sdk

test_ios:
  stage: test
  needs:
    - build_ios
  when: manual
#  when: always
  script:
    - fastlane test_sdk

update_version:
  stage: version
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "develop" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"'
      when: manual
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "develop"'
      when: manual
    - when: never
  before_script:
    - chmod +x ci/update_version.sh
  script:
    - bash ci/update_version.sh

update_release_branch:
  stage: release
  when: manual
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual
    - when: never
  before_script:
    - chmod +x ci/update_release_branch.sh
  script:
    - bash ci/update_release_branch.sh
  tags:
    - ios

fix_release_branch:
  stage: release
  when: manual
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual
    - when: never
  script:
    - git fetch origin
    - git checkout ${RELEASE_BRANCH}
    - git status
    - git reset --hard origin/${RELEASE_BRANCH}
    - git status
  tags:
    - ios

release_publish:
  stage: release
  needs:
    - update_release_branch
  when: manual
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual
    - when: never
  before_script:
    - chmod +x ci/release_publish.sh
  script:
    - bash ci/release_publish.sh
  tags:
    - ios
